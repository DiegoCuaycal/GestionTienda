@page "/proveedors/details"
@using Microsoft.EntityFrameworkCore
@using PracticaClase.Models
@inject IDbContextFactory<AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Proveedor</h2>
    <hr />
    @if (proveedor is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">RazonSocial</dt>
            <dd class="col-sm-10">@proveedor.RazonSocial</dd>
            <dt class="col-sm-2">Direccion</dt>
            <dd class="col-sm-10">@proveedor.Direccion</dd>
            <dt class="col-sm-2">Telefono</dt>
            <dd class="col-sm-10">@proveedor.Telefono</dd>
            <dt class="col-sm-2">Ruc</dt>
            <dd class="col-sm-10">@proveedor.Ruc</dd>
        </dl>
        <div>
            <a href="@($"/proveedors/edit?codigo={proveedor.Codigo}")">Edit</a> |
            <a href="@($"/proveedors")">Back to List</a>
        </div>
    }
</div>

@code {
    private Proveedor? proveedor;

    [SupplyParameterFromQuery]
    private int Codigo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        proveedor = await context.Proveedores.FirstOrDefaultAsync(m => m.Codigo == Codigo);

        if (proveedor is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
